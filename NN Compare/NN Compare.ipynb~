{
 "cells": [
  {
   "cell_type": "code",
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Load the dataset\n",
    "df = pd.read_excel(\"предсказания_КАН.xlsx\")\n",
    "\n",
    "# List of numeric columns to use for the correlation matrix\n",
    "numeric_columns = [\"Возраст\", \"№ попытки\", \"Количество фолликулов\", \"Число ОКК\",\n",
    "                   \"Число инсеминированных\", \"2 pN\", \"Число дробящихся на 3 день\",\n",
    "                   \"Число Bl хор.кач-ва\", \"Частота оплодотворения\", \"Число Bl\",\n",
    "                   \"Частота дробления\", \"Частота формирования бластоцист\",\n",
    "                   \"Частота формирования бластоцист хорошего качества\", \"Частота получения ОКК\",\n",
    "                   \"Число эмбрионов 5 дня\", \"Заморожено эмбрионов\", \"Перенесено эмбрионов\",\n",
    "                   \"KPIScore\", \"Вероятность положительного исхода\", \"Исход переноса КАН\", \"Predictions_DNN\"]\n",
    "\n",
    "# Select only the numeric columns from the DataFrame\n",
    "numeric_df = df[numeric_columns]\n",
    "\n",
    "# Summary statistics\n",
    "summary_stats = numeric_df.describe()\n",
    "print(\"Summary Statistics:\\n\", summary_stats)"
   ],
   "metadata": {
    "datalore": {
     "node_id": "zOG486nmUGv8xuaDAAphUZ",
     "type": "CODE",
     "hide_input_from_viewers": true,
     "hide_output_from_viewers": true
    },
    "is_executing": true,
    "ExecuteTime": {
     "end_time": "2024-07-24T22:21:58.116972Z",
     "start_time": "2024-07-24T22:21:57.492446Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Summary Statistics:\n",
      "          Возраст  № попытки  Количество фолликулов  Число ОКК  \\\n",
      "count  99.000000  99.000000              99.000000  99.000000   \n",
      "mean   34.727273   1.080808              20.040404  16.121212   \n",
      "std     2.502318   0.444393               9.492123   7.800147   \n",
      "min    26.000000   0.000000               5.000000   4.000000   \n",
      "25%    35.000000   1.000000              14.000000  11.000000   \n",
      "50%    35.000000   1.000000              19.000000  15.000000   \n",
      "75%    35.000000   1.000000              25.000000  20.000000   \n",
      "max    46.000000   3.000000              50.000000  41.000000   \n",
      "\n",
      "       Число инсеминированных       2 pN  Число дробящихся на 3 день  \\\n",
      "count               99.000000  99.000000                   99.000000   \n",
      "mean                13.888889  10.989899                   10.989899   \n",
      "std                  6.935400   5.947894                    5.947894   \n",
      "min                  3.000000   1.000000                    1.000000   \n",
      "25%                  9.500000   7.500000                    7.500000   \n",
      "50%                 13.000000  10.000000                   10.000000   \n",
      "75%                 18.000000  14.000000                   14.000000   \n",
      "max                 41.000000  37.000000                   37.000000   \n",
      "\n",
      "       Число Bl хор.кач-ва  Частота оплодотворения   Число Bl  ...  \\\n",
      "count            99.000000               99.000000  99.000000  ...   \n",
      "mean              5.636364                0.791384   6.575758  ...   \n",
      "std               4.178308                0.160147   4.426476  ...   \n",
      "min               0.000000                0.333333   0.000000  ...   \n",
      "25%               2.500000                0.679487   3.000000  ...   \n",
      "50%               5.000000                0.800000   6.000000  ...   \n",
      "75%               8.000000                0.909091   9.000000  ...   \n",
      "max              24.000000                1.000000  22.000000  ...   \n",
      "\n",
      "       Частота формирования бластоцист  \\\n",
      "count                        99.000000   \n",
      "mean                          0.585961   \n",
      "std                           0.263994   \n",
      "min                           0.000000   \n",
      "25%                           0.428571   \n",
      "50%                           0.600000   \n",
      "75%                           0.750000   \n",
      "max                           1.625000   \n",
      "\n",
      "       Частота формирования бластоцист хорошего качества  \\\n",
      "count                                          99.000000   \n",
      "mean                                            0.498356   \n",
      "std                                             0.282829   \n",
      "min                                             0.000000   \n",
      "25%                                             0.333333   \n",
      "50%                                             0.473684   \n",
      "75%                                             0.702941   \n",
      "max                                             1.625000   \n",
      "\n",
      "       Частота получения ОКК  Число эмбрионов 5 дня  Заморожено эмбрионов  \\\n",
      "count              99.000000              99.000000             99.000000   \n",
      "mean                0.799540              10.989899              5.636364   \n",
      "std                 0.022786               5.947894              4.178308   \n",
      "min                 0.714286               1.000000              0.000000   \n",
      "25%                 0.800000               7.500000              2.500000   \n",
      "50%                 0.800000              10.000000              5.000000   \n",
      "75%                 0.812500              14.000000              8.000000   \n",
      "max                 0.823529              37.000000             24.000000   \n",
      "\n",
      "       Перенесено эмбрионов   KPIScore  Вероятность положительного исхода  \\\n",
      "count             99.000000  99.000000                          99.000000   \n",
      "mean               1.838384  22.474747                           0.414276   \n",
      "std                1.166777   3.447399                           0.193566   \n",
      "min                1.000000   9.000000                           0.015317   \n",
      "25%                1.000000  21.000000                           0.248273   \n",
      "50%                2.000000  23.000000                           0.503522   \n",
      "75%                2.000000  25.000000                           0.571164   \n",
      "max                8.000000  25.000000                           0.628597   \n",
      "\n",
      "       Исход переноса КАН  Predictions_DNN  \n",
      "count           99.000000        99.000000  \n",
      "mean             0.525253         0.601231  \n",
      "std              0.501903         0.018413  \n",
      "min              0.000000         0.552442  \n",
      "25%              0.000000         0.590120  \n",
      "50%              1.000000         0.602081  \n",
      "75%              1.000000         0.611628  \n",
      "max              1.000000         0.655713  \n",
      "\n",
      "[8 rows x 21 columns]\n"
     ]
    }
   ],
   "execution_count": 3
  },
  {
   "cell_type": "code",
   "source": [
    "from lets_plot import * \n",
    "ggplot() + \\\n",
    "geom_area(aes(x=\"Вероятность положительного исхода\", y=\"KPIScore\", color=\"Исход переноса КАН\", fill=\"Исход переноса КАН\"), data=summary_stats, sampling=\"none\" if summary_stats.size < 2500 else sampling_systematic(n=2500), stat=\"identity\", position=\"identity\") + \\\n",
    "ggtitle(\"Chart\")  +\\\n",
    " scale_y_discrete()"
   ],
   "metadata": {
    "datalore": {
     "node_id": "ZhIl0ekzPieONYlPps6ZVq",
     "type": "CODE",
     "hide_input_from_viewers": true,
     "hide_output_from_viewers": true
    },
    "ExecuteTime": {
     "end_time": "2024-07-24T22:21:58.313877Z",
     "start_time": "2024-07-24T22:21:58.130909Z"
    }
   },
   "outputs": [
    {
     "ename": "ModuleNotFoundError",
     "evalue": "No module named 'lets_plot'",
     "output_type": "error",
     "traceback": [
      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
      "\u001B[1;31mModuleNotFoundError\u001B[0m                       Traceback (most recent call last)",
      "Cell \u001B[1;32mIn[4], line 1\u001B[0m\n\u001B[1;32m----> 1\u001B[0m \u001B[38;5;28;01mfrom\u001B[39;00m \u001B[38;5;21;01mlets_plot\u001B[39;00m \u001B[38;5;28;01mimport\u001B[39;00m \u001B[38;5;241m*\u001B[39m \n\u001B[0;32m      2\u001B[0m ggplot() \u001B[38;5;241m+\u001B[39m \\\n\u001B[0;32m      3\u001B[0m geom_area(aes(x\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mВероятность положительного исхода\u001B[39m\u001B[38;5;124m\"\u001B[39m, y\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mKPIScore\u001B[39m\u001B[38;5;124m\"\u001B[39m, color\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mИсход переноса КАН\u001B[39m\u001B[38;5;124m\"\u001B[39m, fill\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mИсход переноса КАН\u001B[39m\u001B[38;5;124m\"\u001B[39m), data\u001B[38;5;241m=\u001B[39msummary_stats, sampling\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mnone\u001B[39m\u001B[38;5;124m\"\u001B[39m \u001B[38;5;28;01mif\u001B[39;00m summary_stats\u001B[38;5;241m.\u001B[39msize \u001B[38;5;241m<\u001B[39m \u001B[38;5;241m2500\u001B[39m \u001B[38;5;28;01melse\u001B[39;00m sampling_systematic(n\u001B[38;5;241m=\u001B[39m\u001B[38;5;241m2500\u001B[39m), stat\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124midentity\u001B[39m\u001B[38;5;124m\"\u001B[39m, position\u001B[38;5;241m=\u001B[39m\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124midentity\u001B[39m\u001B[38;5;124m\"\u001B[39m) \u001B[38;5;241m+\u001B[39m \\\n\u001B[0;32m      4\u001B[0m ggtitle(\u001B[38;5;124m\"\u001B[39m\u001B[38;5;124mChart\u001B[39m\u001B[38;5;124m\"\u001B[39m)  \u001B[38;5;241m+\u001B[39m\\\n\u001B[0;32m      5\u001B[0m  scale_y_discrete()\n",
      "\u001B[1;31mModuleNotFoundError\u001B[0m: No module named 'lets_plot'"
     ]
    }
   ],
   "execution_count": 4
  },
  {
   "cell_type": "code",
   "source": [
    "from lets_plot import * \n",
    "ggplot() + \\\n",
    "geom_area(aes(x=\"Predictions_DNN\", y=\"KPIScore\", color=\"Исход переноса КАН\", fill=\"Исход переноса КАН\"), data=summary_stats, sampling=\"none\" if summary_stats.size < 2500 else sampling_systematic(n=2500), stat=\"identity\", position=\"identity\") + \\\n",
    "ggtitle(\"Chart\")  +\\\n",
    " scale_y_discrete()"
   ],
   "metadata": {
    "datalore": {
     "node_id": "iD5mWZg08OqKUI4NrdjefF",
     "type": "CODE",
     "hide_input_from_viewers": true,
     "hide_output_from_viewers": true
    }
   },
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "code",
   "source": [
    "from lets_plot import * \n",
    "ggplot() + \\\n",
    "geom_smooth(aes(x=\"Вероятность положительного исхода\", y=\"Predictions_DNN\"), data=correlation_matrix, sampling=\"none\" if correlation_matrix.size < 2500 else sampling_systematic(n=2500), color=\"#38337a\") + \\\n",
    "ggtitle(\"Chart\") "
   ],
   "metadata": {
    "datalore": {
     "node_id": "1H6TTAtYPsugUCAlsblP8X",
     "type": "PLOT",
     "hide_input_from_viewers": true,
     "hide_output_from_viewers": true,
     "plot_state": {
      "label": "Chart",
      "sampling": true,
      "reactive": true,
      "plots": [
       {
        "type": "REGRESSION",
        "variable": "correlation_matrix",
        "xAxis": {
         "label": "",
         "value": "Вероятность положительного исхода",
         "scale": "NONE"
        },
        "yAxis": {
         "label": "",
         "value": "Predictions_DNN",
         "scale": "NONE"
        },
        "colorAxis": {
         "label": "",
         "value": "#38337a",
         "scale": "NONE"
        }
       }
      ]
     }
    }
   },
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "code",
   "source": [
    "from lets_plot import * \n",
    "ggplot() + \\\n",
    "geom_line(aes(x=\"Частота оплодотворения\", y=\"Вероятность положительного исхода\"), data=correlation_matrix, sampling=\"none\" if correlation_matrix.size < 2500 else sampling_systematic(n=2500), color=\"#c846ac\") + \\\n",
    "ggtitle(\"Chart\") "
   ],
   "metadata": {
    "datalore": {
     "node_id": "n1C3OtnixRF2bUjxgX4SUZ",
     "type": "PLOT",
     "hide_input_from_viewers": true,
     "hide_output_from_viewers": true,
     "plot_state": {
      "label": "Chart",
      "sampling": true,
      "reactive": true,
      "plots": [
       {
        "type": "LINE",
        "variable": "correlation_matrix",
        "xAxis": {
         "label": "",
         "value": "Частота оплодотворения",
         "scale": "NONE"
        },
        "yAxis": {
         "label": "",
         "value": "Вероятность положительного исхода",
         "scale": "NONE"
        },
        "colorAxis": {
         "label": "",
         "value": "#c846ac",
         "scale": "NONE"
        }
       }
      ]
     }
    }
   },
   "outputs": [],
   "execution_count": null
  },
  {
   "cell_type": "code",
   "source": [
    "\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n",
    "\n",
    "\n",
    "# Compute the correlation matrix for the numeric columns\n",
    "correlation_matrix = numeric_df.corr()\n",
    "\n",
    "\n",
    "# Model Prediction Comparison\n",
    "# Assuming 'Исход переноса КАН' and 'Predictions_DNN' are binary classifications\n",
    "true_labels = df['Исход переноса КАН']\n",
    "\n",
    "# Binarize the continuous predictions for DNN\n",
    "threshold_dnn = 0.59\n",
    "threshold_kan = 0.5\n",
    "predicted_labels_dnn = (df['Predictions_DNN'] >= threshold_dnn).astype(int)\n",
    "predicted_labels_kan = (df['Вероятность положительного исхода'] >= threshold_kan).astype(int)\n",
    "\n",
    "# Confusion matrix for DNN model\n",
    "conf_matrix_dnn = confusion_matrix(true_labels, predicted_labels_dnn)\n",
    "print(\"Confusion Matrix for DNN Model:\\n\", conf_matrix_dnn)\n",
    "conf_matrix_kan = confusion_matrix(true_labels, predicted_labels_kan)\n",
    "print(\"Confusion Matrix for KAN Model:\\n\", conf_matrix_kan)\n",
    "# Classification report for DNN model\n",
    "class_report_dnn = classification_report(true_labels, predicted_labels_dnn)\n",
    "print(\"Classification Report for DNN Model:\\n\", class_report_dnn)\n",
    "class_report_kan = classification_report(true_labels, predicted_labels_kan)\n",
    "print(\"Classification Report for KAN Model:\\n\", class_report_kan)"
   ],
   "metadata": {
    "datalore": {
     "node_id": "ycH377wkZ1qyWWnetci27r",
     "type": "CODE",
     "hide_input_from_viewers": true,
     "hide_output_from_viewers": true
    }
   },
   "outputs": [],
   "execution_count": null
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "datalore": {
   "computation_mode": "JUPYTER",
   "package_manager": "pip",
   "base_environment": "default",
   "packages": [
    {
     "name": "openpyxl",
     "version": "3.2.0b1",
     "source": "PIP"
    }
   ],
   "report_row_ids": [],
   "version": 3
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
